{"version":3,"file":"accordion/accordion-child/index.js","mappings":"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","sources":["webpack://wp-challenges-pro/./src/accordion/accordion-child/edit.js","webpack://wp-challenges-pro/./src/accordion/accordion-child/save.js","webpack://wp-challenges-pro/external window \"React\"","webpack://wp-challenges-pro/external window [\"wp\",\"blockEditor\"]","webpack://wp-challenges-pro/external window [\"wp\",\"blocks\"]","webpack://wp-challenges-pro/external window [\"wp\",\"components\"]","webpack://wp-challenges-pro/external window [\"wp\",\"i18n\"]","webpack://wp-challenges-pro/webpack/bootstrap","webpack://wp-challenges-pro/webpack/runtime/compat get default export","webpack://wp-challenges-pro/webpack/runtime/define property getters","webpack://wp-challenges-pro/webpack/runtime/hasOwnProperty shorthand","webpack://wp-challenges-pro/webpack/runtime/make namespace object","webpack://wp-challenges-pro/./src/accordion/accordion-child/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useBlockProps, RichText, InspectorControls, InnerBlocks } from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\n\nexport default function Edit({ attributes, setAttributes }) {\n\n\tconst {\n\t\ttitleAccordion,\n\t\ttoggleOpen\n\t} = attributes;\n\tconst inspectorControls = (\n\t\t<InspectorControls key=\"inspector\">\n\t\t\t<PanelBody title={__('General', 'wp-challenges-pro')} initialOpen={true}>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__('Display open', 'wp-challenges-pro')}\n\t\t\t\t\tchecked={toggleOpen}\n\t\t\t\t\tonChange={(value) => setAttributes({ toggleOpen: value })}\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n\n\treturn (\n\t\t<div {...useBlockProps()}>\n\t\t\t{inspectorControls}\n\t\t\t<div className='container-accordion-pro'>\n\t\t\t\t<div className=\"title-accordion-pro\">\n\t\t\t\t\t<span className=\"toggle-icon-pro\">&#8250;</span>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"title-accordion-inline-pro\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tvalue={titleAccordion}\n\t\t\t\t\t\tallowedFormats={['core/bold', 'core/italic', 'core/link']}\n\t\t\t\t\t\tonChange={(titleAccordion) => setAttributes({ titleAccordion })}\n\t\t\t\t\t\tplaceholder={__('Add Title...', 'wp-challenges-pro')}\n\t\t\t\t\t/>\n\t\t\t\t\t{(toggleOpen == false) && (<span className=\"hidden-editor\">{__('Closed by default', 'wp-challenges-pro')}</span>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content-accordion-pro\">\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\ttemplate={[\n\t\t\t\t\t\t\t['core/paragraph', {\n\t\t\t\t\t\t\t\tplaceholder: __('Add content...', 'wp-challenges-pro'),\n\t\t\t\t\t\t\t\tcontent: __('Content goes here', 'wp-challenges-pro'),\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\"spacing\": {\n\t\t\t\t\t\t\t\t\t\t\"padding\": \".4rem 1rem\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n","import { useBlockProps, RichText, InnerBlocks } from '@wordpress/block-editor';\n\nexport default function save({ attributes }) {\n\tconst {\n\t\ttitleAccordion,\n\t\ttoggleOpen\n\t} = attributes;\n\treturn (\n\t\t<div { ...useBlockProps.save() }>\n\t\t\t<div className={(toggleOpen) ? ('container-accordion-pro') : ('container-accordion-pro hide')}>\n\t\t\t\t<div className=\"title-accordion-pro\">\n\t\t\t\t\t<span className=\"toggle-icon-pro\">&#8250;</span>\n\t\t\t\t\t<RichText.Content {...useBlockProps} value={titleAccordion} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content-accordion-pro\">\n\t\t\t\t\t<InnerBlocks.Content />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nconst customItemIcon = () => {\n\treturn (\n\t\t<svg class=\"w-6 h-6 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 2\">\n\t\t\t<path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 1h16\" />\n\t\t</svg>\n\t);\n};\n\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n\n\ticon: customItemIcon,\n\n} );\n"],"names":["__","useBlockProps","RichText","InspectorControls","InnerBlocks","PanelBody","ToggleControl","Edit","attributes","setAttributes","titleAccordion","toggleOpen","inspectorControls","createElement","key","title","initialOpen","label","checked","onChange","value","className","tagName","allowedFormats","placeholder","template","content","style","save","Content","registerBlockType","metadata","customItemIcon","class","xmlns","fill","viewBox","stroke","d","name","edit","icon"],"sourceRoot":""}